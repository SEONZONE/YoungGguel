<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.movie.dao.AdminMapper"><!-- 매퍼네임스페이스랑 config의 매퍼이름일치시킬것 -->
<!-- 유저관련 -->
<!--  유저 전체 회원 수 조회 -->
<select id="countUser" resultType="int">
	SELECT COUNT(*) FROM USER_INFO
</select>
<!-- 페이징 처리 후 유저 조회 -->
<select id="selectUserBoard" resultType="user">
	SELECT USERID,USERPW,USERNAME,USERTEL,TO_CHAR(USERBIRTH,'YYYY/MM/DD') AS USERBIRTH,USEREMAIL,USERGENDER,USERVERIFY  
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT ROWNUM,B.* 
						FROM USER_INFO B
						ORDER BY ROWNUM DESC 
						) A
				)
	WHERE RN BETWEEN #{start} AND #{end}
	ORDER BY USERBIRTH DESC 
</select>
<!-- 전체 유저 정보 조회 -->
<select id="AdminSelectAllUser" resultType="user">
SELECT USERID,USERPW,USERNAME,USERTEL,TO_CHAR(USERBIRTH,'YYYY/MM/DD') AS USERBIRTH,USEREMAIL,USERGENDER,USERVERIFY FROM USER_INFO
</select>
<!-- 선택한 1명의 유저 정보 조회 -->
<select id="selectOneUser" resultType="user" parameterType="String">
SELECT USERID,USERPW,USERNAME,USERTEL,TO_CHAR(USERBIRTH,'YYYY/MM/DD') AS USERBIRTH,USEREMAIL,USERGENDER,USERVERIFY 
FROM USER_INFO
WHERE USERID=#{VALUE}
</select>
<!--  유저 ID 검색하기 -->
<select id="SearchUserID" resultType="user" parameterType="String">
SELECT USERID,USERPW,USERNAME,USERTEL,TO_CHAR(USERBIRTH,'YYYY/MM/DD') AS USERBIRTH,USEREMAIL,USERGENDER,USERVERIFY 
FROM USER_INFO
WHERE USERID LIKE '%'||#{VALUE}||'%'
</select>
<!-- 어드민에서 유저 정보 변경 -->
<update id="AdminupdateUser" parameterType="java.util.HashMap">
UPDATE USER_INFO SET USERPW=#{USERPW}, 
USERNAME=#{USERNAME}, USERTEL=#{USERTEL}, 
USERBIRTH=#{USERBIRTH}, USEREMAIL=#{USEREMAIL}, 
USERGENDER=#{USERGENDER}
WHERE USERID=#{USERID}

</update>

<!-- 선택한 1명의 유저 정보 삭제 -->
<delete id="AdmindeleteUser" parameterType="String">
DELETE FROM USER_INFO WHERE USERID=#{VALUE}
</delete>
<!-- 유저관련 끝-->

<!-- 영화관련 -->
<!--  영화 테이블 전체 조회 -->
<select id="SelectAllMovie" resultType="movieList">
SELECT MOVIECD,MOVIENM,MOVIENMEN,SHOWTM,
TO_CHAR(OPENDT,'YYYY/MM/DD') AS OPENDT,
TO_CHAR(ENDDT,'YYYY/MM/DD') AS ENDDT,
SUBSTR(CONTENTS,1,10) as CONTENTS_s,CONTENTS,PRDTSTATNM,NATIONS,GENRE,DIRECTORS,ACTORS,WATCHGRADENM,COMPANYS
FROM MOVIE
</select>
<!-- 영화 테이블 업데이트 -->
<!-- <update id="updateMovie">
UPDATE MOVIE SET MOVIECD=#{},,,,,
WHERE MOVIECD=#{}
</update> -->
<!-- 영화 인포넣는법 -->
<insert id="insertMovie_info" parameterType="movieList">
 INSERT INTO MOVIE (MOVIECD,MOVIENM,MOVIENMEN,SHOWTM,OPENDT,ENDDT,CONTENTS,PRDTSTATNM,NATIONS,GENRE,DIRECTORS,ACTORS,WATCHGRADENM,COMPANYS)
 VALUES(MOVIE_INFO_SEQ.NEXTVAL,#{movieNm},#{movieNmEn},#{showTm},#{openDt},#{endDt},#{contents},#{prdtStatNm},#{nations},#{genre},#{directors},#{actors},#{watchGradeNm},#{companys})
 </insert>
 
 <!-- 상품 테이블 관련 -->
<!--  전체 제품 테이블  조회 -->
<select id="SelectAllProduct" resultType="Product">
SELECT PNO,PNAME,PCONTENTS,PPRICE,PCATEGORY,PIMG,PSALESRATE 
FROM PRODUCT
</select>

<!-- 글 작성시에 글번호NO 증가시켜주는 SQL -->
<select id="getSequence" resultType="java.lang.Integer">
    SELECT MOVIE_INFO_SEQ.NEXTVAL FROM DUAL
</select> 
<select id="getAdminAskSequence" resultType="java.lang.Integer">
     SELECT ASK_NO_SEQ.NEXTVAL FROM DUAL
</select> 


 
 

<insert id="insertActor" parameterType="actor">
INSERT INTO ACTOR (ACTOR_NO,ACTOR_NAME) VALUES (ACTOR_SEQ.NEXTVAL,#{actor_name})
</insert>

 
 <!-- 마이페이지에서 영화 리스트 가져오기 -->
<select id="selcetReserveMovieList" resultType="movieDemo">
select TO_CHAR(RESERVE_DATE,'YYYY/MM/DD') RESERVE_DATE,
RESERVE_NO,
MOVIE_TITLE,
RESERVE_INFO,
PAY_TOTAL,
TO_CHAR(PAY_DATE,'YYYY/MM/DD/HH:MM') PAY_DATE
FROM MOVIEDEMO
</select>
 <!-- 영화관련 끝-->
 <!-- 어드민에서 문의내역읽어오기 -->
 <select id="AskAnswerList" resultType="ask">
SELECT ASK_NO,ASK_TITLE,ASK_CONTENTS,ASK_FILENAME,ASK_REGDATE,PNUM,REF,USER_ID,ANSWER_CK
FROM ASK
ORDER BY ASK_REGDATE ASC
 </select>
 <!-- 어드민에서 선택한문의내역읽어오기 -->
 <select id="readselecectedAsk" resultType="ask" parameterType="java.util.HashMap">
SELECT ASK_NO,ASK_TITLE,ASK_CONTENTS,ASK_FILENAME,ASK_REGDATE,PNUM,REF,USER_ID,ANSWER_CK
 FROM ASK
 WHERE USER_ID=#{user_id} AND ASK_NO=#{ask_no}
 </select>
<!-- 어드민에서 문의 답변달아주기 -->
<!-- <insert id="insertAskAnswer1" parameterType="askanswer">
INSERT INTO ASK_ANSWER(ANSWER_NO,ANSWER_TITLE,ANSWER_CONTENTS,ANSWER_PNUM,ANSWER_FILE) 
VALUES(#{ask_no},#{answer_title},#{answer_contents},#{ANSWER_PNUM},#{answer_file})
</insert> -->
<!-- 어드민에서 문의 답변달아주기 -->
<insert id="insertAskAnswer" parameterType="ask">
	INSERT INTO ASK(ASK_NO,ASK_TITLE,ASK_CONTENTS,ASK_FILENAME,ASK_REGDATE,PNUM,REF,USER_ID,ANSWER_CK) 
	VALUES(#{ask_no},#{ask_title},#{ask_contents},#{ask_fileName},SYSDATE,#{pnum},#{ref},#{user_id},#{answer_ck})
</insert>	

<update id="updateAskstate" parameterType="Integer">
UPDATE ASK 
SET ANSWER_CK='답변완료' 
WHERE ASK_NO=#{VALUE}
</update>
 
 <!-- 원우님 파일 -->
<!-- 시간표관련 -->
	<select id="selectMovieList" resultType="HashMap">
		SELECT MOVIECD,MOVIENM
		FROM MOVIE
		WHERE OPENDT <![CDATA[ <= ]]> SYSDATE
		AND ENDDT <![CDATA[ >= ]]> SYSDATE
	</select>
 
	<select id="selectTimetable" resultType="HashMap">
		 SELECT T.TIME_NO as bookingTimeNo, T.MOVIE_NO||' / '||M.MOVIENM as bookingMovieName, T.THEATER_NO||' / '||S.THEATERTOWN||' / '||S.THEATERGWAN as bookingTheaterNo, 
	    TO_CHAR(T.TIME_DATE,'YY/MM/DD') as bookingDate,
	    T.TIME_START as bookingTimeStart, T.TIME_END as bookingTimeEnd
	    FROM TIMETABLE T , MOVIE M, THEATER S
	    WHERE T.MOVIE_NO = M.MOVIECD
	    AND T.THEATER_NO = S.THEATERNO
	    order by BOOKINGDATE asc, BOOKINGTIMESTART asc
	</select>
 	
 	<select id="selectTheaterList" resultType="HashMap">
 		SELECT theaterno, theatertown, theatergwan
 		FROM theater 	
 	</select>
 	
 	<insert id="seatInsert">
	 	insert into seat(SE_NO, BOOKINGSEATNO1, BOOKINGSEATNO2, BOOKINGSEATNO3, BOOKINGSEATNO4, BOOKINGSEATNO5, BOOKINGSEATNO6, BOOKINGSEATNO7, BOOKINGSEATNO8,
	 	BOOKINGSEATNO9, BOOKINGSEATNO10,SE_NO11, SE_NO12, SE_NO13, SE_NO14, SE_NO15, SE_NO16, SE_NO17, SE_NO18, SE_NO19, SE_NO20)
	 	VALUES(SEQ_SENO.NEXTVAL,'f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f')
 	</insert>
 	
 	<select id="seatNoselect" resultType="int">
	 	SELECT MAX(se_no) FROM seat
 	</select>
 	
 	<insert id="timetableInsert" parameterType="HashMap" >
 		INSERT INTO TIMETABLE(TIME_NO, MOVIE_NO, THEATER_NO, TIME_DATE, TIME_START, TIME_END, SE_NO)
		VALUES(SEQ_TIME_NO.NEXTVAL,#{moviecd}, #{theaterno}, #{bookingdate}, #{bookingtimestart}, #{bookingtimeend}, #{seno})
 	</insert>
 		
 	<delete id="timetableDelete" parameterType="String">
 		delete timetable where time_no=#{value}
 	</delete>
 	
 	<update id="timetableModify" parameterType="HashMap">
 		UPDATE timetable SET TIME_DATE=#{bookingdate},TIME_START=#{bookingtimestart} ,TIME_END=#{bookingtimeend} WHERE TIME_NO = #{id}

<!--  워누님 파일 끝 -->
 	</update>
 
 </mapper>
